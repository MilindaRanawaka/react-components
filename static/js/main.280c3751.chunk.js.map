{"version":3,"sources":["components/Toggle/toggle.js","components/Button/Button.jsx","App.js","reportWebVitals.js","index.js"],"names":["ToggleSwitch","useState","on","setOnState","className","onClick","o","Button","title","type","styles","disabled","props","dynamicClassName","includes","getClassName","style","PropTypes","string","func","object","bool","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAiBiBA,EAdI,WAEjB,MAAyBC,oBAAS,GAAlC,mBAAOC,EAAP,KAAWC,EAAX,KAEA,OACI,sBAAKC,UAAU,SAAf,UACA,wBAAQA,UAAWF,EAAK,KAAO,MAAOG,QAH3B,kBAAMF,GAAW,SAAAG,GAAC,OAAKA,MAGlC,SACA,sBAAMF,UAAU,UAEfF,EAAK,aAAe,kB,mGCRvBK,EAAS,SAAC,GAQT,IAPNC,EAOK,EAPLA,MACAC,EAMK,EANLA,KACAJ,EAKK,EALLA,QACAK,EAIK,EAJLA,OACAN,EAGK,EAHLA,UACAO,EAEK,EAFLA,SACGC,EACE,iBAUL,OACC,gDACCR,UAXmB,WACpB,IAAIS,EAAgB,wBACnBF,IAAaF,EAAKK,SAAS,YAAcL,EAAO,YAAcA,GAK/D,OAHIL,IACHS,GAAgB,WAAQT,IAElBS,EAIKE,GACXC,MAAON,EACPC,SAAUA,EACVN,QAASA,GACLO,GALL,aAMEJ,MAKJS,IAAUV,OAAS,CAClBC,MAAOS,IAAUC,OACjBb,QAASY,IAAUE,KACnBT,OAAQO,IAAUG,OAClBhB,UAAWa,IAAUC,OACrBP,SAAUM,IAAUI,MAGrBd,EAAOe,aAAe,CACrBd,MAAO,SACPC,KAAM,GACNE,UAAU,GAGIJ,QCjCAgB,MAVf,WACC,OACC,gCACC,qDACA,cAAC,EAAD,CAAQf,MAAM,aACd,cAAC,EAAD,QCEYgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.280c3751.chunk.js","sourcesContent":["import { useState } from \"react\"\nimport './toggle.css'\n\nconst ToggleSwitch = () => {\n   \n    const [on, setOnState] = useState(false);\n    const toggle = () => setOnState(o => !o);\n    return (\n        <div className=\"toggle\">\n        <button className={on ? 'on' : 'off'} onClick={toggle}>\n        <span className=\"pin\" />\n        </button>\n        {on ? \"SwitchedOn\" : \"SwitchedOff\"}\n        </div>\n  );\n}\n\n  export default ToggleSwitch;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.styles.scss';\n\nconst Button = ({\n\ttitle,\n\ttype,\n\tonClick,\n\tstyles,\n\tclassName,\n\tdisabled,\n\t...props\n}) => {\n\tconst getClassName = () => {\n\t\tlet dynamicClassName = `button button-${\n\t\t\tdisabled && !type.includes('disabled') ? type + '-disabled' : type\n\t\t}`;\n\t\tif (className) {\n\t\t\tdynamicClassName += ` ${className}`;\n\t\t}\n\t\treturn dynamicClassName;\n\t};\n\treturn (\n\t\t<button\n\t\t\tclassName={getClassName()}\n\t\t\tstyle={styles}\n\t\t\tdisabled={disabled}\n\t\t\tonClick={onClick}\n\t\t\t{...props}>\n\t\t\t{title}\n\t\t</button>\n\t);\n};\n\nPropTypes.Button = {\n\ttitle: PropTypes.string,\n\tonClick: PropTypes.func,\n\tstyles: PropTypes.object,\n\tclassName: PropTypes.string,\n\tdisabled: PropTypes.bool\n};\n\nButton.defaultProps = {\n\ttitle: 'Button',\n\ttype: '',\n\tdisabled: false\n};\n\nexport default Button;\n","import React from 'react';\nimport './App.css';\nimport ToggleSwitch from './components/Toggle/toggle';\nimport Button from './components/Button/Button';\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<h1>Components showcase</h1>\n\t\t\t<Button title='Click me' />\n\t\t\t<ToggleSwitch />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}